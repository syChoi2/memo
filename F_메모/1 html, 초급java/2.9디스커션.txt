1. 상속은 왜 필요한가?
	기본이 되는(기본 속성과 매서드를 가진) 객체를 하나 만들고 그 객체를 기본으로 하는 또 다른 객체를 만들기 위해
	optimazation- 최적화, expansion- 확장, grouping- 그룹화
	(환경, 조건)
	   개량			추가		구분
2. 오버라이딩 왜 필요한가?
	재정의
	상속 받은 (속성이나(?)) 메서드를 수정하여 사용하고자 할 때

3. 다형성은 왜 필요한가?
	호환성을 맞추기 위해
	상속하여 새로운 클래스를 만들어 개량하고 확장했을 때 개량한 클래스를 원래 자리에 가져와 사용하고자 할 때 유용하다.
	상속관계에 있는 클래스들 사이에서 자녀클래스의 객체로 부모속성자의 객체를 매개변수로 하는 메서드에 접근하기 위해 

4. 캡슐화의 목적은?
	엄폐 은닉성
	작성자 이외의 프로그램 접근자들에게 보안이 필요한 속성에 대한 접근을 제한하기 위해

5. 접근제어자(제한자) 필요성은?
	