ip -dns(domain name system)-> domain 

유동ip - dhcp(dynamic host configuration protocol)
고정ip

ISP(Internet Service Provider)

APM  Application Performance Management)
	//apache-php-mysql
----------------
pms	
데이터 입출력이 많고
트랜잭션이 많은
=>최소한의 메모리 사용(DB의 하중)
=>레이아웃과 배치
대쉬보드
로그인하지 않아도 보일 수 있는 컨텐츠

1. 포트폴리오에 도움이 되는지 (다양한 컨텐츠가 필요하지는 않은지)
2. 모바일 메타데이터 구분해서 페이지 두개 만드는 건 안하는지
-----------------
si


------------------------
System.out.println(request.getContextPath());  ==> 루트를 반환

jsp와 jsp의 폴더 그리고 서블릿에서의 url경로의 관계 복습

redirecting- contextpath 를 해줘야함

forwarding - 서버내에서 url처리 = "/"가 루트인지 안다

------------
암호화

------------------------
애초에 잘못된 데이터는 서버로 가져가지 않고 javaScript로 처리하도록 한다
------------------------
mvc(model-view-controller) pattern
1. 사용자가 편집하길 원하는 모든 데이터를 가지고 있어야 한다.
즉, 화면에 네모박스안에 글자가 표현된다면, 네모박스의 화면 위치 정보, 네모박스의 크기정보, 글자내용, 글자의 위치, 글자의 포맷 정보 등을 가지고 있어야 한다.  
2. 뷰나 컨트롤러에 대해서 어떤 정보도 알지 말아야 한다.
데이터 변경이 일어났을 때 모델에서 화면 UI를 직접 조정해서 수정할 수 있도록 뷰를 참조하는 내부 속성값을 가지면 안 된다는 말이다. 
3. 변경이 일어나면, 변경 통지에 대한 처리방법을 구현해야만 한다.
모델의 속성 중 텍스트 정보가 변경되면, 이벤트를 발생시켜 누군가에게 전달해야 하며, 누군가 모델을 변경하도록 요청하는 이벤트를 보냈을 때 이를 수신할 수 있는 처리 방법을 구현해야 한다. 이는 모델이 변경되는 방법을 다른 구성요소들에게 알려주게 되는 방법이다. 

DI(dependency injection) (spring)-스프링 컨테이너에 필요한 빈을 올려놓고/ 필요한 인젝션을 해준다. 
IOC(injection of conversion)-스프링이 인젝트해준다.
인터페이스의 구현부가 여러개 있을 때 만약 controller에서 바로 dao로 접근하면 불편하다.
다형성을 이용해 객체를 생성한다.



